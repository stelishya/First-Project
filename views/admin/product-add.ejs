<%- include ('../partials/admin/sidebar')%>

<div class="min-h-screen bg-[#f5f5f5] ml-64 p-8" style="background-color: #f4efef;"  >
    <div class="max-w-3xl mx-auto">
        <div class="bg-white rounded-lg shadow-sm" style="background-color: #d1cfcf;" >
            <!-- Header -->
            <div class="border-b border-gray-200 px-6 py-4">
                <h2 class="text-xl font-semibold text-gray-800">Add New Product</h2>
            </div>

            <!-- Form -->
            <div class="p-6">
                <form action="/admin/products/add" method="POST" onsubmit="return validateForm()">
                    <!-- Product Name -->
                    <div class="mb-6">
                        <label for="productName" class="block text-sm font-medium text-gray-700 mb-1">Product Name</label>
                        <input type="text" id="productName" name="productName" required 
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                            placeholder="Enter product name">
                    </div>

                    <!-- Description -->
                    <div class="mb-6">
                        <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                        <textarea id="description" name="description" rows="4" required 
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                            placeholder="Enter product description"></textarea>
                    </div>

                    <!-- Price and Stock -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                        <div>
                            <label for="mrp" class="block text-sm font-medium text-gray-700 mb-1">MRP</label>
                            <div class="flex items-center">
                                <span class="px-3 py-2 bg-gray-100 border border-r-0 border-gray-300 rounded-l-md">₹</span>
                                <input type="number" id="mrp" name="mrp" required min="0" step="0.01" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-r-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                                    placeholder="0.00">
                            </div>
                        </div>
                        <div>
                            <label for="quantity" class="block text-sm font-medium text-gray-700 mb-1">Stock</label>
                            <input type="number" id="quantity" name="quantity" required min="0" 
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                                placeholder="Enter stock quantity">
                        </div>
                    </div>

                    <!-- Category and Offer -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                        <div>
                            <label for="category" class="block text-sm font-medium text-gray-700 mb-1">Category</label>
                            <select id="category" name="category" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400">
                                <option value="">Select a category</option>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>"><%= category.name %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div>
                            <label for="productOffer" class="block text-sm font-medium text-gray-700 mb-1">Product Offer (%)</label>
                            <input type="number" id="productOffer" name="productOffer" min="0" max="100" 
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                                placeholder="Enter offer percentage">
                        </div>
                    </div>

                    <!-- Image Upload -->
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Product Images</label>
                        <div class="mt-2">
                            <input type="file" id="imageInput" accept="image/*" class="w-full">
                            <div id="addedImagesContainer" class="mt-4 grid grid-cols-2 md:grid-cols-3 gap-4"></div>
                        </div>
                    </div>
 
                    <!-- Cropper Modal -->
                    <div id="cropperModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50">
                        <div class="bg-white p-4 rounded-lg" style="min-width: 500px; max-width: 90vw;">
                            <div class="relative" style="height: 500px;">
                                <img id="imageToCrop" src="" alt="Image to crop" style="max-width: 100%; max-height: 100%; display: block;">
                            </div>
                            <div class="mt-4 flex justify-end space-x-2">
                                <button type="button" id="cropButton" class="px-4 py-2 bg-blue-500 text-white rounded-md hidden">Crop</button>
                                <button type="button" id="cancelCropButton" class="px-4 py-2 bg-gray-500 text-white rounded-md hidden">Cancel</button>
                            </div>
                        </div>
                    </div>

                    <!-- Buttons -->
                    <div class="flex justify-end space-x-3 border-t border-gray-200 pt-6">
                        <button type="button" onclick="window.location.href='/admin/products'" 
                            class="px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors">
                            Cancel
                        </button>
                        <button type="submit" 
                            class="px-4 py-2 bg-[#5a5a5a] text-white rounded-md hover:bg-gray-700 transition-colors">
                            Add Product
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">

<script>
    // Image managing
    let cropper;
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    const imageInput = document.getElementById('imageInput');
    const cropperModal = document.getElementById('cropperModal');
    const imageToCrop = document.getElementById('imageToCrop');
    const cropBtn = document.getElementById('cropButton');
    const cancelCropBtn = document.getElementById('cancelCropButton');

    imageInput.addEventListener('change', function (event) {
        event.preventDefault(); // Prevent any default behavior
        const file = event.target.files[0];
        if (cropper) cropper.destroy();
        if (file) {
            const reader = new FileReader();

            reader.onload = function (e) {
                imageToCrop.src = e.target.result;
                cropperModal.classList.remove('hidden');
                cropBtn.classList.remove('hidden');
                cancelCropBtn.classList.remove('hidden');

                // Initialize Cropper.js
                cropper = new Cropper(imageToCrop, {
                    aspectRatio: 1,
                    viewMode: 1,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true,
                    minContainerWidth: 450,
                    minContainerHeight: 450,
                });
            };
            reader.readAsDataURL(file);
        }
    });

    cropBtn.addEventListener('click', function (event) {
        event.preventDefault(); // Prevent any default behavior
        const croppedCanvas = cropper.getCroppedCanvas();
        const croppedDataURL = croppedCanvas.toDataURL();

        // Check for duplicates
        const existingImages = addedImagesContainer.querySelectorAll('img');
        for (let img of existingImages) {
            if (img.src === croppedDataURL) {
                alert('This image has already been added.');
                return;
            }
        }
        if (existingImages.length >= 5) {
            alert('You can only upload up to 5 images.');
            return;
        }

        const imageContainer = document.createElement('div');
        imageContainer.classList.add('flex', 'relative', 'space-x-2');

        // Create an image element for the cropped image
        const croppedImage = document.createElement('img');
        croppedImage.src = croppedDataURL;
        croppedImage.style.maxWidth = '200px';
        croppedImage.style.height = 'auto';
        croppedImage.classList.add('rounded-md');

        // Create a hidden input to store the base64 image data
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'images[]';
        hiddenInput.value = croppedDataURL;

        // Adding a remove button to each image container
        const removeButton = document.createElement('button');
        removeButton.type = 'button'; // Add type="button" to prevent form submission
        removeButton.textContent = '❌';
        removeButton.classList.add(
            'absolute', 'top-[-10px]', 'right-[-10px]', 'z-10', 'bg-gray-200',
            'text-gray-800', 'border-none', 'p-1.5', 'rounded-full', 'cursor-pointer'
        );
        removeButton.onclick = function (e) {
            e.preventDefault(); // Prevent any default behavior
            imageContainer.remove();
            const existingImages = addedImagesContainer.querySelectorAll('img');
            if (existingImages.length <= 0) {
                addedImagesContainer.classList.remove('p-4');
            }
            imageInput.classList.remove('hidden');
        };

        imageContainer.appendChild(croppedImage);
        imageContainer.appendChild(hiddenInput);
        imageContainer.appendChild(removeButton);

        // Append the image container to the added images container
        addedImagesContainer.appendChild(imageContainer);
        addedImagesContainer.classList.add('p-4');

        if (addedImagesContainer.querySelectorAll('img').length >= 5) {
            imageInput.classList.add('hidden');
        }

        // Reset the input and close the modal
        imageInput.value = '';
        cropper.destroy();
        cropperModal.classList.add('hidden');
        cropBtn.classList.add('hidden');
        cancelCropBtn.classList.add('hidden');
        imageToCrop.src = '';
    });

    cancelCropBtn.addEventListener('click', function (event) {
        event.preventDefault(); // Prevent any default behavior
        cropperModal.classList.add('hidden');
        cropBtn.classList.add('hidden');
        cancelCropBtn.classList.add('hidden');
        cropper.destroy();
        imageToCrop.src = '';
    });
</script>

<script>
    function validateForm() {
        // Get all hidden inputs with name 'images[]'
        const imageInputs = document.querySelectorAll('input[name="images[]"]');
        
        if (imageInputs.length === 0) {
            alert('Please add at least one product image'); 
            return false;
        }
        
        if (imageInputs.length > 5) {
            alert('Maximum 5 images allowed');
            return false;
        }

        // Add other validation if needed
        const productName = document.getElementById('productName').value;
        const description = document.getElementById('description').value;
        const mrp = document.getElementById('mrp').value;
        const quantity = document.getElementById('quantity').value;
        const category = document.getElementById('category').value;

        if (!productName || !description || !mrp || !quantity || !category) {
            alert('Please fill all required fields');
            return false;
        }

        return true;
    }
</script>

<%- include("../partials/admin/footer") %>
