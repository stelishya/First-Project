<%- include ('../../partials/admin/sidebar')%> 

<div class="min-h-screen bg-[#f5f5f5] ml-64 p-8" style="background-color: #ebe8e8;" >
    <div class="max-w-3xl mx-auto">
        <div class="bg-white rounded-lg shadow-sm" style="background-color: #d1cfcf;">
            <!-- Header -->
            <div class="border-b border-gray-200 px-6 py-4">
                <h2 class="text-xl font-semibold text-gray-800">Edit Product</h2>
            </div>

            <!-- Messages -->
            <% if (errorMessage) { %>
                <div class="mx-6 mt-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-lg" role="alert">
                    <%= errorMessage %>
                </div>
            <% } %>
            <% if (successMessage) { %>
                <div class="mx-6 mt-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded-lg" role="alert">
                    <%= successMessage %>
                </div>
            <% } %>

            <!-- Form -->
            <div class="p-6">
                <form action="/admin/products/edit/<%= product._id %>" method="POST" onsubmit="return validateForm()">
                    <input type="hidden" name="productId" value="<%= product._id %>">
                    <!-- Product Name -->
                    <div class="mb-6">
                        <label for="productName" class="block text-sm font-medium text-gray-700 mb-1">Product Name</label>
                        <input type="text" id="productName" name="productName" required 
                            value="<%= product.productName %>"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                            placeholder="Enter product name">
                    </div>

                    <!-- Description -->
                    <div class="mb-6">
                        <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                        <textarea id="description" name="description" rows="4" required 
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                            placeholder="Enter product description"><%= product.description %></textarea>
                    </div>

                    <!-- Price and Stock -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                        <div>
                            <label for="mrp" class="block text-sm font-medium text-gray-700 mb-1">MRP</label>
                            <div class="flex items-center">
                                <span class="px-3 py-2 bg-gray-100 border border-r-0 border-gray-300 rounded-l-md">₹</span>
                                <input type="number" id="mrp" name="mrp" required min="0" step="0.01" 
                                    value="<%= product.mrp %>"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-r-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                                    placeholder="0.00">
                            </div>
                        </div>
                        <div>
                            <label for="quantity" class="block text-sm font-medium text-gray-700 mb-1">Stock</label>
                            <input type="number" id="quantity" name="quantity" required min="0" 
                                value="<%= product.quantity %>"
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                                placeholder="Enter stock quantity">
                        </div>
                    </div>

                    <!-- Category and Offer -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                        <div>
                            <label for="category" class="block text-sm font-medium text-gray-700 mb-1">Category</label>
                            <select id="category" name="category" required
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400">
                                <option value="">Select a category</option>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>" 
                                        <%= product.category.equals(category._id) ? 'selected' : '' %>>
                                        <%= category.name %>
                                    </option>
                                <% }) %>
                            </select>
                        </div>
                        <div>
                            <label for="productOffer" class="block text-sm font-medium text-gray-700 mb-1">Product Offer (%)</label>
                            <input type="number" id="productOffer" name="productOffer" min="0" max="100" 
                                value="<%= product.productOffer %>"
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-400"
                                placeholder="Enter offer percentage">
                        </div>
                    </div>

                    <!-- Existing Images -->
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Current Images</label>
                        <div class="grid grid-cols-2 md:grid-cols-3 gap-4" id="existingImagesContainer">
                            <% product.productImage.forEach((image, index) => { %>
                                <div class="relative group">
                                    <img src="/uploads/product-images/<%= image %>" 
                                         alt="Product image <%= index + 1 %>"
                                         class="w-full h-32 object-cover rounded-lg">
                                    <button type="button" 
                                            onclick="removeExistingImage(this, '<%= image %>')"
                                            class="absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                                        ×
                                    </button>
                                    <input type="hidden" name="existingImages[]" value="<%= image %>">
                                </div>
                            <% }) %>
                        </div>
                    </div>

                    <!-- New Image Upload -->
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Add New Images</label>
                        <div class="mt-2">
                            <input type="file" id="imageInput" accept="image/*" class="w-full">
                            <div id="addedImagesContainer" class="mt-4 grid grid-cols-2 md:grid-cols-3 gap-4"></div>
                        </div>
                    </div> 

                    <!-- Cropper Modal -->
                    <div id="cropperModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50">
                        <div class="bg-white p-4 rounded-lg" style="min-width: 500px; max-width: 90vw;">
                            <div class="relative" style="height: 500px;">
                                <img id="imageToCrop" src="" alt="Image to crop" style="max-width: 100%; max-height: 100%; display: block;">
                            </div>
                            <div class="mt-4 flex justify-end space-x-2">
                                <button type="button" id="cropButton" class="px-4 py-2 bg-blue-500 text-white rounded-md hidden">Crop</button>
                                <button type="button" id="cancelCropButton" class="px-4 py-2 bg-gray-500 text-white rounded-md hidden">Cancel</button>
                            </div>
                        </div>
                    </div>

                    <!-- Buttons -->
                    <div class="flex justify-end space-x-3 border-t border-gray-200 pt-6">
                        <button type="button" onclick="window.location.href='/admin/products'" 
                            class="px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors">
                            Cancel
                        </button>
                        <button type="submit" 
                            class="px-4 py-2 bg-[#5a5a5a] text-white rounded-md hover:bg-gray-700 transition-colors">
                            Save Changes
                        </button>
                    </div>

                    <!-- Hidden input for removed images -->
                    <input type="hidden" name="removedImages" id="removedImages">
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">

<script>
    let removedImages = [];
    
    function removeExistingImage(button, imageName) {
        const container = button.parentElement;
        container.remove();
        removedImages.push(imageName);
        document.getElementById('removedImages').value = JSON.stringify(removedImages);
        
        // Check if we can enable the file input
        updateImageInputState();
    }

    function updateImageInputState() {
        const totalImages = document.querySelectorAll('#existingImagesContainer .relative').length + 
                          document.querySelectorAll('#addedImagesContainer .relative').length;
        const imageInput = document.getElementById('imageInput');
        imageInput.disabled = totalImages >= 5;
        
        if (imageInput.disabled) {
            imageInput.title = "Maximum 5 images allowed";
        } else {
            imageInput.title = "";
        }
    }

    // Image managing
    let cropper;
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    const imageInput = document.getElementById('imageInput');
    const cropperModal = document.getElementById('cropperModal');
    const imageToCrop = document.getElementById('imageToCrop');
    const cropBtn = document.getElementById('cropButton');
    const cancelCropBtn = document.getElementById('cancelCropButton');

    // Initialize image input state
    updateImageInputState();

    imageInput.addEventListener('change', function (event) {
        event.preventDefault();
        const file = event.target.files[0];
        if (cropper) cropper.destroy();
        if (file) {
            const reader = new FileReader();

            reader.onload = function (e) {
                imageToCrop.src = e.target.result;
                cropperModal.classList.remove('hidden');
                cropBtn.classList.remove('hidden');
                cancelCropBtn.classList.remove('hidden');

                cropper = new Cropper(imageToCrop, {
                    aspectRatio: 1,
                    viewMode: 1,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true,
                    minContainerWidth: 450,
                    minContainerHeight: 450,
                });
            };
            reader.readAsDataURL(file);
        }
    });

    cropBtn.addEventListener('click', function (event) {
        event.preventDefault();
        const croppedCanvas = cropper.getCroppedCanvas();
        const croppedDataURL = croppedCanvas.toDataURL();

        // Check total images (existing + new)
        const totalImages = document.querySelectorAll('#existingImagesContainer .relative').length + 
                          document.querySelectorAll('#addedImagesContainer .relative').length;
                          
        if (totalImages >= 5) {
            alert('You can only have up to 5 images total.');
            return;
        }

        const imageContainer = document.createElement('div');
        imageContainer.classList.add('relative', 'group');

        // Create an image element for the cropped image
        const croppedImage = document.createElement('img');
        croppedImage.src = croppedDataURL;
        croppedImage.classList.add('w-full', 'h-32', 'object-cover', 'rounded-lg');

        // Create a hidden input to store the base64 image data
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'newImages[]';
        hiddenInput.value = croppedDataURL;

        // Create remove button
        const removeButton = document.createElement('button');
        removeButton.type = 'button';
        removeButton.innerHTML = '×';
        removeButton.classList.add(
            'absolute', 'top-1', 'right-1', 'bg-red-500', 'text-white',
            'rounded-full', 'w-6', 'h-6', 'flex', 'items-center', 'justify-center',
            'opacity-0', 'group-hover:opacity-100', 'transition-opacity'
        );
        removeButton.onclick = function() {
            imageContainer.remove();
            updateImageInputState();
        };

        imageContainer.appendChild(croppedImage);
        imageContainer.appendChild(hiddenInput);
        imageContainer.appendChild(removeButton);
        addedImagesContainer.appendChild(imageContainer);

        // Close modal and reset
        cropperModal.classList.add('hidden');
        cropBtn.classList.add('hidden');
        cancelCropBtn.classList.add('hidden');
        imageInput.value = '';
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }

        updateImageInputState();
    });

    cancelCropBtn.addEventListener('click', function (event) {
        event.preventDefault();
        cropperModal.classList.add('hidden');
        cropBtn.classList.add('hidden');
        cancelCropBtn.classList.add('hidden');
        imageInput.value = '';
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
    });

    function validateForm() {
        const totalImages = document.querySelectorAll('#existingImagesContainer .relative').length + 
                          document.querySelectorAll('#addedImagesContainer .relative').length;
        
        if (totalImages === 0) {
            alert('Please add at least one product image.');
            return false;
        }
        
        if (totalImages > 5) {
            alert('You can only have up to 5 images.');
            return false;
        }
        
        return true;
    }
</script>

<%- include("../../partials/admin/footer") %>
