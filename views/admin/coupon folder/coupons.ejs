<style>
    .c_ontainer {
        display: flex;
        min-height: 100vh;
        background-color: #f5f0f0;
    }

    .sidebar {
        width: 260px;
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        background-color: #f4f4f4;
        z-index: 10;
    }

    .content {
        flex: 1;
        padding: 20px;
        margin-left: 260px;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="c_ontainer">
    <aside class="sidebar">
        <%- include('../../partials/admin/sidebar') %>
    </aside>

    <main class="content" style="background-color: #d1cfcf;">
        <div class="flex justify-between items-center mb-8  ">
            <h2 class="text-3xl font-bold text-gray-800">Coupon Management</h2>
            <form action="/admin/category" method="get" class="flex-1 max-w-md">
                <!-- <div class="search-container">
                    <input type="text" placeholder="Search Categories">
                    <button>
                        <i class="fas fa-search"></i>
                    </button>
                </div> -->
                
            </form>
            <div class="flex items-center gap-4">
                <div>
                    <div class="text-sm font-medium text-gray-900">Selin Stelishya Oliver<br>Admin</div>
                </div>
                <img alt="User profile picture" class="w-10 h-10 rounded-full" src="https://storage.googleapis.com/a1aa/image/6Frmd66qfz37V6OkvJHOKto7rafaEUORfStf9uiesPYqTb5eE.jpg"/>
            </div>
        </div>
    
        <div class="flex justify-between items-center mb-6">
            <!-- <h2 class="text-2xl font-semibold"></h2> -->
             <!--            <button onclick="openCouponModal()" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600"></button> -->
            <button onclick="openAddCouponModal()" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">
                Add New Coupon
            </button>
        </div>

        <!-- Coupons List -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            
            <div class="overflow-x-auto">
                <table class="w-full text-left">
                    <thead>
                        <tr class="text-gray-600 border-b">
                            <th class="py-3 px-4 text-center">Code</th>
                            <th class="py-3 px-4 text-center">Coupon Name</th>
                            <th class="py-3 px-4 text-center">Offer</th>
                            <th class="py-3 px-4 text-center">Min. Purchase</th>
                            <th class="py-3 px-4 text-center">Valid Till</th>
                            <th class="py-3 px-4 text-center">Usage</th>
                            <th class="py-3 px-4 text-center">Status</th>
                            <th class="py-3 px-4 text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% coupons.forEach(coupon=> { %>
                            <tr class="border-b hover:bg-gray-50">
                                <td class="py-3 px-4 font-medium text-center">
                                    <%= coupon.code %>
                                </td>
                                <td class="py-3 px-4 text-center">
                                    <%= coupon.name %>
                                </td>
                                <td class="py-3 px-4 text-center">
                                    <%= coupon.offerPercentage %>
                                </td>
                                <td class="py-3 px-4 text-center">₹<%= coupon.minimumPurchase %>
                                </td>
                                <td class="py-3 px-4 text-center">
                                    <%= new Date(coupon.expiryDate).toLocaleDateString() %>
                                </td>
                                <td class="py-3 px-4 text-center">
                                    <%= coupon.usedCount %>/<%= coupon.usageLimit || '∞' %>
                                </td>
                                <td class="py-3 px-4 text-center">
                                    <span
                                        class="px-2 py-1 rounded-full text-sm
                                    <%= coupon.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                                        <%= coupon.isActive ? 'Active' : 'Inactive' %>
                                    </span>
                                </td>
                                <td class="py-3 px-4 space-x-2 text-center">
                                    <button onclick="toggleCouponStatus('<%= coupon._id %>', '<%= coupon.isActive %>')"
                                        class="text-sm px-3 py-1 rounded
                                    <%= coupon.isActive ? 'bg-red-100 text-red-600 hover:bg-red-200' : 'bg-green-100 text-green-600 hover:bg-green-200' %>">
                                        <%= coupon.isActive ? 'Deactivate' : 'Activate' %>
                                    </button>
                                    <!-- <button onclick='editCouponModal(`<%= JSON.stringify({
                                            _id: coupon._id,
                                            code: coupon.code,
                                            name: coupon.name,
                                            offerPercentage: coupon.offerPercentage,
                                            minimumPurchase: coupon.minimumPurchase,
                                            maximumDiscount: coupon.maximumDiscount,
                                            usageLimit: coupon.usageLimit,
                                            startDate: coupon.startDate,
                                            expiryDate: coupon.expiryDate
                                        }).replace(/'/g, "\\'") %>`)' -->
                                    <button onclick="editCouponModal ('<%= JSON.stringify(coupon) %>')"
                                        
                                        class="text-sm px-3 py-1 rounded bg-blue-100 text-blue-600 hover:bg-blue-200">
                                        Edit
                                    </button>
                                    <button onclick='deleteCoupon("<%= coupon._id %>")'
                                        class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 transition">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="mt-6 flex justify-between items-center">
                <div class="flex justify-between items-center mb-4">
                    <p class="text-sm text-gray-600">
                        Showing <%= startIndex %>-<%= endIndex %> of <%= totalCoupons %> coupons
                    </p>
                </div>
                <!-- <div class="text-sm text-gray-600">
                    Page %= currentPage %> of %= totalPages %>
                </div> -->
                <div class="flex space-x-2">
                    <% if (currentPage > 1) { %>
                        <a href="/admin/coupons?page=<%= currentPage - 1 %>" 
                           class="px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded hover:bg-gray-200">
                            Previous
                        </a>
                    <% } %>

                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <a href="/admin/coupons?page=<%= i %>"
                           class="px-4 py-2 text-sm rounded <%= currentPage === i ? 'bg-gray-500 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200' %>">
                            <%= i %>
                        </a>
                    <% } %>

                    <% if (currentPage < totalPages) { %>
                        <a href="/admin/coupons?page=<%= currentPage + 1 %>"
                           class="px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded hover:bg-gray-200">
                            Next
                        </a>
                    <% } %>
                </div>
                <!-- <div class="text-sm text-gray-600">
                    <select onchange="window.location.href='/admin/coupons?page=1&limit=' + this.value"
                            class="px-2 py-1 border rounded bg-white">
                        <option value="5" %= limit === 5 ? 'selected' : '' %>>5 per page</option>
                        <option value="10" %= limit === 10 ? 'selected' : '' %>>10 per page</option>
                        <option value="15" %= limit === 15 ? 'selected' : '' %>>15 per page</option>
                    </select>
                </div> -->
            </div>
        </div>
    </main>
</div>

<!-- Add Coupon Modal -->
<div id="addCouponModal" class="fixed inset-0 bg-black bg-opacity-50 hidden overflow-y-auto h-200 w-400 z-50">
    <div class="relative top-20 mx-auto p-5 border w-[600px] shadow-lg rounded-md bg-white">
        <div class="flex justify-between items-center mb-6 border-b pb-4">
            <h3 class="text-xl font-semibold text-gray-900">Add New Coupon</h3>
            <button onclick="closeAddCouponModal()" class="text-gray-400 hover:text-gray-500">
                <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>

        <form id="addCouponForm" onsubmit="handleAddCouponSubmit(event)" class="space-y-6">
            <!-- Code and Description Row -->
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Coupon Code</label>
                    <input type="text" id="addCouponCode" name="code" required placeholder="Enter coupon code"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Coupon Name</label>
                    <input type="text" id="addCouponName" name="name" required placeholder="Enter Coupon Name"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
            </div>

            <div class="grid grid-cols-2 gap-4">
                <!-- Offer Percentage Row -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Offer Percentage</label>
                    <input type="number" id="addOfferPercentage" name="offerPercentage" required min="0" max="100" placeholder="Enter percentage"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
                <!-- Usage Limit -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Usage Limit</label>
                    <input type="number" id="addUsageLimit" name="usageLimit" min="0" placeholder="Enter usage limit (optional)"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
            </div>
            <!-- Min Purchase and Max Discount Row -->
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Purchase Amount</label>
                    <input type="number" id="addMinimumPurchase" name="minimumPurchase" required min="0" placeholder="Enter min amount"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Maximum Discount</label>
                    <input type="number" id="addMaximumDiscount" name="maximumDiscount" min="0" placeholder="Enter max discount (optional)"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
            </div>

            <!-- Start and End Date Row -->
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
                    <input type="datetime-local" id="addStartDate" name="startDate" required
                        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Expiry Date</label>
                    <input type="datetime-local" id="addExpiryDate" name="expiryDate" required
                        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
            </div>



            <!-- Buttons -->
            <div class="flex justify-end space-x-3 pt-4 border-t">
                <button type="button" onclick="closeAddCouponModal()"
                    class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500">
                    Cancel
                </button>
                <button type="submit"
                    class="px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500">
                    Create Coupon
                </button>
            </div>
        </form>
    </div>
</div>

    <!-- Edit Coupon Modal -->
<div id="editCouponModal" class="fixed inset-0 bg-black bg-opacity-50 hidden overflow-y-auto h-200 w-400 z-50">
    <div class="relative top-20 mx-auto p-5 border w-[600px] shadow-lg rounded-md bg-white">
        <div class="flex justify-between items-center mb-6 border-b pb-4">
            <h3 class="text-xl font-semibold text-gray-900">Edit Coupon</h3>
            <button onclick="closeEditCouponModal()" class="text-gray-400 hover:text-gray-500">
                <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
        <form id="editCouponForm" class="space-y-6">
            <!-- Code and Description Row -->
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Coupon Code</label>
                    <input type="text" name="code" id="editCouponCode" required
                        class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Coupon Name</label>
                    <input type="text" name="name" id="editCouponName" required
                        class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500">
                </div>
            </div>

            <!-- Offer Details Row -->
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Offer Percentage</label>
                    <input type="number" name="offerPercentage" id="editOfferPercentage" required min="0" max="100"
                        class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Usage Limit</label>
                        <input type="number" name="usageLimit" id="editUsageLimit" min="1"
                            class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500">
                    </div>
                </div>
                
                <!-- Additional Details Row -->
                <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Purchase Amount</label>
                    <input type="number" name="minimumPurchase" id="editMinimumPurchase" required min="0"
                        class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Maximum Discount</label>
                    <input type="number" name="maximumDiscount" id="editMaximumDiscount" min="0"
                        class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500">
                </div>
            </div>

            <!-- Date Range Row -->
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
                    <input type="date" name="startDate" id="editStartDate" required
                        class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Expiry Date</label>
                    <input type="date" name="expiryDate" id="editExpiryDate" required
                        class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500">
                </div>
            </div>

            <div class="flex justify-end space-x-3">
                <button type="button" onclick="closeEditCouponModal()"
                    class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 focus:outline-none">
                    Cancel
                </button>
                <button type="submit"
                    class="px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500">
                    Update Coupon
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    function openAddCouponModal() {
         // Reset form for new coupon
        // document.getElementById('couponForm').reset();
        // document.getElementById('couponForm').action = '/admin/coupons';
        
        // // Update modal title and button text
        // document.querySelector('#couponModal h3').textContent = 'Add New Coupon';
        // document.querySelector('#couponForm button[type="submit"]').textContent = 'Create Coupon';
        document.getElementById('addCouponForm').reset();
        document.getElementById('addCouponForm').action = '/admin/coupons';
        
        // Show modal
        // document.getElementById('couponModal').classList.remove('hidden');
        document.getElementById('addCouponModal').classList.remove('hidden');
    }

    function closeAddCouponModal() {
        document.getElementById('addCouponModal').classList.add('hidden');
    }

    function closeEditCouponModal() {
        document.getElementById('editCouponModal').classList.add('hidden');
    }

    async function handleAddCouponSubmit(event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);
        const couponData = Object.fromEntries(formData.entries());
        
        try {
            const response = await axios.post('/admin/coupons', couponData);
            if (response.status === 201) {
                showToast('Coupon created successfully!');
                closeAddCouponModal();
                setTimeout(() => location.reload(), 1000);
            }
        } catch (error) {
            console.error('Error creating coupon:', error);
            showToast(error.response?.data?.message || 'Error creating coupon', true);
        }
    }

    function editCouponModal(couponData) {
        try {
            const coupon = JSON.parse(couponData);
            console.log('Editing coupon:', coupon);
            // document.getElementById('couponForm').action = `/admin/coupon/edit/${coupon._id}`;
            // document.getElementById('couponName').value = coupon.name;
            // document.getElementById('couponCode').value = coupon.code;
            // document.getElementById('offerPercentage').value = coupon.offerPercentage;
            // document.getElementById('minimumPurchase').value = coupon.minimumPurchase;
            // document.getElementById('maximumDiscount').value = coupon.maximumDiscount || '';
            // document.getElementById('usageLimit').value = coupon.usageLimit || '';
 
            document.getElementById('editCouponForm').action = `/admin/coupon/edit/${coupon._id}`;
            document.getElementById('editCouponName').value = coupon.name;
            document.getElementById('editCouponCode').value = coupon.code;
            document.getElementById('editOfferPercentage').value = coupon.offerPercentage;
            document.getElementById('editMinimumPurchase').value = coupon.minimumPurchase;
            document.getElementById('editMaximumDiscount').value = coupon.maximumDiscount || '';
            document.getElementById('editUsageLimit').value = coupon.usageLimit || '';
            // document.getElementById('expiryDate').value = new Date(coupon.expiryDate).toISOString().split('T')[0];
            
             // Format and set the start date
             if (coupon.startDate) {
                const startDate = new Date(coupon.startDate);
                console.log('Start date:', startDate);
                //                document.getElementById('startDate').value = startDate.toISOString().slice(0,10);
                document.getElementById('editStartDate').value = startDate.toISOString().slice(0,10);
                // .split('T')[0];
            }

            // Format and set the expiry date
            if (coupon.expiryDate) {
                const expiryDate = new Date(coupon.expiryDate);
                console.log('Expiry date:', expiryDate); 
                // document.getElementById('expiryDate').value = expiryDate.toISOString().slice(0, 10);
                document.getElementById('editExpiryDate').value = expiryDate.toISOString().slice(0, 10);
                // .split('T')[0];
            }
            // Update modal title and submit button
            // document.querySelector('#couponForm button[type="submit"]').textContent = 'Update Coupon';
            // document.querySelector('#couponModal h3').textContent = 'Edit Coupon';
            document.querySelector('#editCouponModal h3').textContent = 'Edit Coupon';
            document.querySelector('#editCouponForm button[type="submit"]').textContent = 'Update Coupon';

            // Show modal
            //            document.getElementById('couponModal').classList.remove('hidden');
            document.getElementById('editCouponModal').classList.remove('hidden');
        } catch (error) {
            console.error('Error in editCouponModal:', error);
            showToast('Error opening edit modal', true);
        }
    }

    document.getElementById('editCouponForm').addEventListener('submit', async function(event) {
        console.log('coupon form submit')
        event.preventDefault();
        // const formData = new FormData(this);
        const form = document.getElementById('editCouponForm');
        const formData = new FormData(form);
        const couponData = Object.fromEntries(formData.entries());
        
        const couponId = form.action.split('/').pop();

        try {
            // const response = await axios.post(this.action, couponData);
            const response = await axios.patch(`/admin/coupon/edit/${couponId}`, couponData);
            console.log("response : ",response)
            if (response.data.success) {
                console.log('Coupon updated successfully:', response.data);
                showToast('Coupon updated successfully!');
                closeEditCouponModal();
                setTimeout(() => location.reload(), 1500);
            }else{
                console.log('response.data.message : ',response.data.message)
                showToast(response.data.message || 'Coupon updating failed!');
            }
        } catch (error) {
            console.error('Error updating coupon - edit:', error);
            showToast(error.response?.data?.message || 'Error updating coupon - edit', true);
        }
    });

    async function deleteCoupon(couponId) {
        // if (!confirm('Are you sure you want to delete this coupon?')) {
        //     return;
        // }
        const result = await Swal.fire({
            title: 'Are you sure you want to delete this coupon?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        });

        if (result.isConfirmed) {
        try {
            const response = await axios.delete(`/admin/coupon/${couponId}`);
            if (response.data.success) {
                showToast('Coupon deleted successfully');
                setTimeout(() => {
                    location.reload();
                }, 1000);
            }else{
                showToast(response.data.message || 'Failed to delete coupon',true)
            }
        } catch (error) {
            console.error('Error deleting coupon:', error);
            showToast(error.response?.data?.message || 'Error deleting coupon', true);
        }
        }
    }

    // async function handleCouponSubmit(event) {
    //     event.preventDefault();
    //     const form = event.target;
    //     const formData = new FormData(form);
    //     const couponData = Object.fromEntries(formData.entries());
        
    //     console.log('Form Data:', couponData);

    //     // Convert string values to appropriate types
    //     if (couponData.offerPercentage) {
    //         couponData.offerPercentage = Number(couponData.offerPercentage);
    //     }
    //     if (couponData.minimumPurchase) {
    //         couponData.minimumPurchase = Number(couponData.minimumPurchase);
    //     }
    //     if (couponData.maximumDiscount) {
    //         couponData.maximumDiscount = Number(couponData.maximumDiscount);
    //     }
    //     if (couponData.usageLimit) {
    //         couponData.usageLimit = Number(couponData.usageLimit);
    //     }

    //     console.log('Processed Data:', couponData);
    async function toggleCouponStatus(couponId, currentStatus) {
        try {
            // const response = await axios.post('/admin/coupons', couponData);
            // console.log('Response:', response.data);
            // if (response.status === 201) {
            //     showToast('Coupon created successfully!');
            //     closeCouponModal();
            //     // Add delay before reload
            //     setTimeout(() => {
            const response = await axios.patch(`/admin/coupons/${couponId}/toggle-status`);
            if (response.status === 200) {
                showToast(`Coupon ${currentStatus ? 'deactivated' : 'activated'} successfully!`);
                location.reload();
                //                }, 2000); // Wait for 2 seconds before reloading
            }
        } catch (error) {
            // console.error('Error:', error.response?.data || error);
            // showToast(error.response?.data?.message || 'Error creating coupon', true);
            showToast(error.response?.data?.message || 'Error updating coupon status', true);
        }
    }
    // function closeCouponModal() {
    //     document.getElementById('couponModal').classList.add('hidden');
    //     document.getElementById('couponForm').reset();
    window.onclick = function(event) {
        const addModal = document.getElementById('addCouponModal');
        const editModal = document.getElementById('editCouponModal');
        
        if (event.target === addModal) {
            closeAddCouponModal();
        } else if (event.target === editModal) {
            closeEditCouponModal();
        }
    }

    function showToast(message, isError = false) {
        Toastify({
            text: message,
            duration: 2000,
            // close: true,
            gravity: "top",
            position: "center",
            stopOnFocus: true,
            style: {
                background: isError ? "#ff5f6d" : "#00b09b",
                borderRadius: "8px",
                padding: "12px 24px",
                position: "fixed",
                top: "20px",
                right: "20px",
                zIndex: "99999",
                boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
                color: "#ffffff",
                fontSize: "14px",
                fontWeight: "500"
            },
            offset: {
                x: 0,
                y: 60
            }
        }).showToast();
    }
    // async function toggleCouponStatus(couponId, currentStatus) {
    //     try {
    //         const response = await axios.patch(`/admin/coupons/${couponId}/toggle-status`);
    //         if (response.status === 200) {
    //             showToast(`Coupon ${currentStatus ? 'deactivated' : 'activated'} successfully!`);
    //             location.reload();
    //         }
    //     } catch (error) {
    //         showToast(error.response?.data?.message || 'Error updating coupon status', true);
    //     }
    // }

    // // Close modal when clicking outside
    // window.onclick = function (event) {
    //     const modal = document.getElementById('couponModal');
    //     if (event.target === modal) {
    //         closeCouponModal();
    //     }
    // }
</script>