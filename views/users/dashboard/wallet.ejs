<!-- Header -->
<%- include('../../partials/user/header',{search}) %>

<style>
    .wallet-card {
        background: #fff8f3;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(251, 146, 60, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .wallet-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 15px rgba(251, 146, 60, 0.15);
    }

    .balance-section {
        background: linear-gradient(135deg, #eae8e6 0%, #b6b4b3 100%);
        border: 2px solid #767574;
        color: #333231;
        border-radius: 8px;
        padding: 2rem;
        margin-bottom: 2rem;
        transition: all 0.3s ease;
    }

    .amount-btn {
        background-color: #fff7ed;
        color: #5a5857;
        transition: all 0.3s ease;
        border: 2px solid #3a3937;
        border-radius: 8px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
    }

    .amount-btn:hover {
        background-color: #ffedd5;
        border-color: #4a4948;
        color: #424241;
        transform: scale(1.05);
    }

    .add-money-btn {
        background-color: #494847;
        /* border: 2px solid #fb923c; */
        color: snow;
        transition: all 0.3s ease;
        font-weight: 600;
    }

    .add-money-btn:hover {
        background-color: #767372;
        border-color: #3a3838;
        color: white;
        transform: scale(1.02);
    }

    .input-amount {
        transition: all 0.3s ease;
        border: 2px solid #82807e;
        border-radius: 8px;
        background-color: #fff7ed;
    }

    .input-amount:focus {
        border-color: #3e3d3b;
        background-color: white;
        box-shadow: 0 0 0 3px rgba(251, 146, 60, 0.2);
    }

    .toast {
        position: fixed;
        top: 1rem;
        right: 1rem;
        padding: 1rem 2rem;
        border-radius: 8px;
        color: white;
        opacity: 0;
        transform: translateY(-20px);
        transition: all 0.3s ease;
    }

    .toast.success {
        background-color: #84cc16;
        border: 2px solid #65a30d;
    }

    .toast.error {
        background-color: #f87171;
        border: 2px solid #dc2626;
    }

    .toast.show {
        opacity: 1;
        transform: translateY(0);
    }

    .transaction-card {
        background-color: #fff7ed;
        border: 1px solid #454443;
        transition: all 0.3s ease;
    }

    .transaction-card:hover {
        transform: translateX(5px);
        border-color: #787675;
        background-color: #ffedd5;
    }
</style>
<nav>
    <div class="nav-links">
     <a href="/user/home">
      Home
     </a>
     <span class="divider">
     </span>
     <a href="#">
      Contact
     </a>
     <span class="divider">
     </span>
     <a href="#">
      About
     </a>
     <span class="divider">
     </span>
     <a href="/user/products">
      Products
     </a>
    </div>
   </nav>
<!-- Main Content -->
<main class="flex">
    <!-- Sidebar -->
    <%- include('../../partials/user/dashboard_sideBar') %>

    <!-- Main Section -->
    <section class="p-6 w-4/5" style="background-color: rgb(211, 208, 206);">
        
        <div class="wallet-card p-6">
            <nav class="flex mb-4 bg-gray-400 rounded" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 md:space-x-3">
                    <li class="inline-flex items-center">
                        <a href="/user/wallet" class="inline-flex items-center text-gray-700 hover:text-white-600">
                            <!-- <svg class="w-4 h-4 mr-2 " fill="currentColor" viewBox="0 0 20 20"> -->
                                <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
                            </svg>
                            Payments
                        </a>
                    </li>
                    
                    <li aria-current="page">
                        <div class="flex items-center">
                            <svg class="w-6 h-6 text-gray-200" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                            </svg>
                            <span class="ml-1 text-gray-500 md:ml-2">Wallet</span>
                        </div>
                    </li>
                </ol>
            </nav>
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold text-gray-700">My Wallet</h2>
            </div>

            <!-- Balance Display -->
            <div class="balance-section">
                <p class="text-lg mb-2 font-medium">Current Balance</p>
                <!-- <h3 class="text-4xl font-bold">₹%= userWallet ? userWallet.balance.toFixed(2): '0' %></h3> -->
            </div>

            <!-- Add Money Section -->
            <div class="space-y-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Add Money to Wallet</label>
                    <input type="number" id="amount" class="input-amount w-full p-3" placeholder="Enter amount" min="1">
                </div>

                <!-- Quick Amount Buttons -->
                <div class="flex gap-4 justify-center">
                    <button onclick="setAmount(250)" class="amount-btn">₹250</button>
                    <button onclick="setAmount(500)" class="amount-btn">₹500</button>
                    <button onclick="setAmount(750)" class="amount-btn">₹750</button>
                </div>

                <button onclick="addMoney()" class="add-money-btn w-full py-3 rounded-lg">
                    Add Money
                </button>
            </div>

            <!-- Transaction History -->
            <div class="mt-8">
                <h3 class="text-xl font-bold text-gray-700 mb-4">Recent Transactions</h3>
                <div class="space-y-3">
                    <% if (userWallet && userWallet.transactions && userWallet.transactions.length > 0) { %>
                        <% userWallet.transactions.slice().reverse().forEach(transaction => { %>
                            <div class="transaction-card p-4 rounded-lg flex justify-between items-center">
                                <div>
                                    <p class="font-medium text-gray-700">
                                        <%= transaction.description %>
                                        <!-- <%= transaction.type === 'credit' ? 'Money Added' : 'Money Spent' %> -->
                                    </p>
                                    <p class="text-sm text-gray-600">
                                        <%= new Date(transaction.timestamp).toLocaleDateString('en-IN', { 
                                            day: 'numeric', 
                                            month: 'short', 
                                            year: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        }) %>
                                    </p>
                                </div>
                                <p class="font-bold <%= transaction.type === 'credit' ? 'text-green-600' : 'text-red-600' %>">
                                    <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount %>
                                </p>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="text-center py-4 text-gray-600">
                            No transactions yet
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </section>
</main>

<!-- Toast Container -->
<div id="toast" class="toast"></div>

<!-- Footer -->
<%- include('../../partials/user/footer') %>

<script>
    function setAmount(value) {
        document.getElementById('amount').value = value;
    }

    function showToast(message, type) {
        const toast = document.getElementById('toast');
        toast.textContent = message;
        toast.className = toast `${type}`;
        setTimeout(() => {
            toast.classList.add('show');
        }, 100);

        setTimeout(() => {
            toast.classList.remove('show');
        }, 3000);
    }

    async function addMoney() {
        const amount = document.getElementById('amount').value;
        if (!amount || amount <= 0) {
            showToast('Please enter a valid amount', 'error');
            return;
        }

        try {
            const paymentResponse = await axios.post('/user/razorpay/order', {
                amount: amount,
            });
            
            const options = {
                key: '<%= razorpayKey %>', 
                amount: amount * 100,
                currency: "INR",
                name: "Craftora",
                description: "Order Payment",
                order_id: paymentResponse.data.order.id,
                handler: async function (response) {
                    try {
                        console.log('Payment response from Razorpay:', response);
                        if (!response.razorpay_payment_id || !response.razorpay_order_id || !response.razorpay_signature) {
                            showToast('Payment failed: Missing payment details', true);
                            return;
                        }
                        // Verify payment
                        const verifyResponse = await axios.post('/user/razorpay/verify', {
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_signature: response.razorpay_signature
                        });
    
                        if (verifyResponse.data.success) {
                            const response = await axios.post('/user/wallet/add-money', { amount });

                            if (response.status === 200) {
                                console.log('Money added successfully');
                                // Show success message with SweetAlert
                                await Swal.fire({
                                    title: 'Money Added Successfully!',
                                    text: 'Thank you for using our Wallet service',
                                    icon: 'success',
                                    // confirmButtonText: 'View Orders',
                                    // confirmButtonColor: '#f97316', // orange-500
                                    allowOutsideClick: true
                                });
                                window.location.href = '/user/dashboard/wallet';
                            } else {
                                console.error('Failed to add money:', response.data);
                                showToast(response.data.message || 'Failed to add money', 'error');
                            }
                        } else {
                            showToast('Verification failed', true);
                        }
                    } catch (error) {
                        console.error('Payment verification error:', error);
                        showToast('Payment verification failed', true);
                    }
                },
                modal: {
                    ondismiss: function() {
                        console.log('Payment modal closed');
                        showToast('Payment cancelled by user', true);
                    }
                },
                prefill: {
                    name: "<%= session.fullname %>",
                    email: "<%= session.email %>",
                },
                theme: {
                    color: "#fb923c"
                }
            };
    
            const rzp1 = new Razorpay(options);
            rzp1.open();
        } catch (error) {
            console.error('Error adding money:', error);
            showToast('Something went wrong', 'error');
        }
    }
</script>