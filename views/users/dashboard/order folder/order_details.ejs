<%- include('../../../partials/user/header') %>
    <nav>
        <div class="nav-links">
            <a href="/user/home">
                Home
            </a>
            <span class="divider">
            </span>
            <a href="#">
                Contact
            </a>
            <span class="divider">
            </span>
            <a href="#">
                About
            </a>
            <span class="divider">
            </span>
            <a href="/user/products">
                Products
            </a>
        </div>
    </nav>
    <main class="flex bg-orange-50 min-h-screen">
        <%- include('../../../partials/user/dashboard_sideBar',{search}) %>

            <div class="flex-1 p-8" style="background-color: rgb(211, 208, 206);">
                <div class="max-w-4xl mx-auto">
                    <nav class="flex mb-4 bg-gray-400 rounded" aria-label="Breadcrumb">
                        <ol class="inline-flex items-center space-x-1 md:space-x-3">
                            <li class="inline-flex items-center">
                                <a href="/user/dashboard"
                                    class="inline-flex items-center text-gray-700 hover:text-white-600">
                                    <svg class="w-4 h-4 mr-2 " fill="currentColor" viewBox="0 0 20 20">
                                        <path
                                            d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z">
                                        </path>
                                    </svg>
                                    Account
                                </a>
                            </li>
                            <li>
                                <div class="flex items-center">
                                    <svg class="w-6 h-6 text-gray-200" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd"
                                            d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                            clip-rule="evenodd"></path>
                                    </svg>
                                    <a href="/user/orders" class="ml-1 text-gray-700 hover:text-gray-600 md:ml-2">Orders history </a>
                                </div>
                            </li>
                            <li aria-current="page">
                                <div class="flex items-center">
                                    <svg class="w-6 h-6 text-gray-200" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd"
                                            d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                            clip-rule="evenodd"></path>
                                    </svg>
                                    <span class="ml-1 text-gray-500 md:ml-2">Order Details</span>
                                </div>
                            </li>
                        </ol>
                    </nav>
                    <!-- Order Header -->
                    <div
                        class="bg-white rounded-lg shadow-md p-6 mb-6 transform hover:scale-[1.02] transition-transform duration-300">
                        <div class="flex justify-between items-center">
                            <div>
                                <h1 class="text-2xl font-bold text-gray-800">Order #<%= order.orderId || order._id %>
                                </h1>
                                <p class="text-gray-600">Ordered on <%= new Date(order.createdAt).toLocaleDateString()
                                        %>
                                </p>
                            </div>
                            <div class="text-left">
                                <p class="text-lg ml-2 font-semibold text-gray-800">Status</p>
                                <span class="px-3 py-1 rounded-full text-sm font-semibold
                            <% if(order.status === 'Delivered') { %>
                                bg-green-100 text-green-800
                            <% } else if(order.status === 'Cancelled') { %>
                                bg-red-100 text-red-800
                            <% } else if(order.status === 'Order Placed') { %>
                                bg-orange-100 text-orange-800
                            <% } else if(order.status === 'Returned') { %>
                                bg-blue-100 text-blue-800
                            <% } else { %>
                                bg-yellow-100 text-yellow-800
                            <% } %>
                        ">
                                    <%= order.status %>
                                </span>
                            </div>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="bg-white rounded-lg shadow-md p-6 mb-6 transform hover:scale-[1.02] transition-transform duration-300">
                        <h2 class="text-xl font-semibold mb-4">Order Items</h2>
                        <div class="space-y-4">
                            <% order.orderedItems.forEach((item,index)=> { %>
                                <div class="bg-white p-4 rounded-lg shadow mb-4 flex items-center justify-between">
                                <div class="flex items-center p-4 border rounded-lg hover:shadow-md transition-shadow duration-300">
                                    <img src="<%= item.product.productImage && item.product.productImage.length ? '/uploads/product-images/' + item.product.productImage[0] : '/images/no_productImage.png' %>"
                                        alt="<%= item.product.productName %>" class="w-24 h-24 object-cover rounded-md">
                                    <div class="ml-6 flex-1">
                                        <h3 class="text-lg font-semibold">
                                            <%= item.product.productName %>
                                        </h3>
                                        <!-- <div class="text-sm text-gray-600">Quantity: <%= item.quantity %></div> -->
                                        <div class="mt-2">
                                            <span class="text-sm text-gray-500 line-through">₹<%=item.product.mrp.toFixed(0) %></span>
                                            <span class="ml-2 text-lg font-semibold text-gray-900">₹<%=item.priceAtPurchase.toFixed(0) %></span>
                                            <span class="text-md text-green-600"><%= (((item.product.mrp - item.priceAtPurchase)/item.product.mrp)*100).toFixed(0) %> % Off</span>
                                            <!-- <% if(item.discountPercentage > 0) { %>
                                        <span class="ml-2 text-green-600 text-sm">
                                            (<%= item.discountPercentage %>% off)
                                        </span>
                                    <% } %> -->
                                            <!-- <% if(item.product.mrp> item.priceAtPurchase) { %>
                                                <span class="ml-2 text-green-600 text-sm">
                                                    (<%= (item.product.mrp - item.priceAtPurchase).toFixed(0) %>
                                                        Discount)
                                                        (<%= Math.round(((item.product.mrp - item.priceAtPurchase) / item.product.mrp) * 100) %>% off)
                                                </span>
                                            <% } %> -->
                                        </div>
                                    </div>
                                </div>
                                <div class="flex items-center p-4 border rounded-lg hover:shadow-md transition-shadow duration-300">
                                    <div class="mt-2">
                                        <div class="text-sm text-gray-600 mt-1">
                                            <span class="ml-2 text-lg font-semibold text-gray-700">₹<%= item.priceAtPurchase.toFixed(0) %></span>
                                            <span class="mx-2">×</span>
                                            <span class="text-md text-gray-600"><%= item.quantity %></span>
                                            <span class="mx-2">=</span>
                                            <span class="ml-2 text-lg font-semibold text-gray-900">₹<%= (item.priceAtPurchase * item.quantity).toFixed(0) %></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="flex items-center">
                                    <% if(order.status === 'Delivered' && !order.returnDetails?.returnRequested) { %>
                                        <button onclick="showReturnModal('<%= order._id %>', '<%= item.product._id %>', '<%= item.product.productName %>')"
                                            class="bg-gray-400 text-gray-600 px-4 py-2 rounded hover:bg-gray-300 transition-colors">
                                            Return Item
                                        </button>
                                    <% } else if(order.returnDetails?.returnRequested) { %>
                                        <span class="px-3 py-1 rounded-full text-sm font-semibold
                                            <% if(order.returnDetails.returnStatus === 'Pending') { %>
                                                bg-yellow-100 text-yellow-800
                                            <% } else if(order.returnDetails.returnStatus === 'Approved') { %>
                                                bg-green-100 text-green-800
                                            <% } else { %>
                                                bg-red-100 text-red-800
                                            <% } %>">
                                            Return <%= order.returnDetails.returnStatus %>
                                        </span>
                                    <% } %>
                                </div>
                                </div>
                            <% }) %>
                        </div>
                    </div>

                    <!-- Return Modal -->
                    <div id="returnModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
                        <div class="bg-white p-6 rounded-lg max-w-md w-full mx-4">
                            <h3 class="text-xl font-semibold mb-4">Return Item</h3>
                            <p id="returnItemName" class="text-gray-600 mb-4"></p>
                            
                            <div class="mb-4">
                                <label for="returnReason" class="block text-sm font-medium text-gray-700 mb-2">
                                    Reason for Return
                                </label>
                                <select id="returnReason" onchange="toggleOtherReason()" class="w-full p-2 border rounded-md">
                                    <option value="">Select a reason</option>
                                    <option value="Damaged Product">Damaged Product</option>
                                    <option value="Wrong Item">Wrong Item</option>
                                    <option value="Not as Described">Not as Described</option>
                                    <option value="Changed Mind">Changed Mind</option>
                                    <option value="Other">Other</option>
                                </select>
                            </div>
                            <div id="otherReasonContainer" class="mb-4 hidden">
                                <label for="otherReason" class="block text-sm font-medium text-gray-700 mb-2">
                                    Please specify the reason
                                </label>
                                <textarea id="otherReason" 
                                    class="w-full p-2 border rounded-md resize-none h-24"
                                    placeholder="Please provide details about your return reason..."></textarea>
                            </div>
                            <!-- Return Policy -->
                            <div class="mb-6 p-4 bg-gray-50 rounded-md border border-gray-200">
                                <h4 class="text-sm font-semibold text-gray-700 mb-2">Return Policy:</h4>
                                <ul class="text-sm text-gray-600 space-y-1 list-disc pl-4">
                                    <li>Returns are only accepted within 7 days of delivery</li>
                                    <li>Product must be in original condition</li>
                                    <li>Refund will be processed to your wallet</li>
                                </ul>
                            </div>
                            <div class="flex gap-3">
                                <button onclick="submitReturn()" 
                                    class="flex-1 bg-gray-500 text-white py-2 px-4 rounded hover:bg-gray-600">
                                    Submit Return
                                </button>
                                <button onclick="closeReturnModal()" 
                                    class="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded hover:bg-gray-400">
                                    Cancel
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Payment Info -->
                    <div class="bg-white rounded-lg shadow-md p-6 mb-6 transform hover:scale-[1.02] transition-transform duration-300">
                        <h2 class="text-xl font-semibold mb-4">Payment Information</h2>
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <p class="text-gray-600">Payment Method</p>
                                <p class="font-semibold">
                                    <%= order.paymentMethod %>
                                </p>
                            </div>
                            <div>
                                <p class="text-gray-600">Payment Status</p>
                                <p class="font-semibold 
                            <%= order.paymentStatus === 'Success' ? 'text-green-600' : 
                               order.paymentStatus === 'Failed' ? 'text-red-600' : 'text-orange-600' %>">
                                    <%= order.paymentStatus %>
                                </p>
                            </div>
                            <% if (order.paymentStatus==='Failed' && order.paymentMethod==='Online Payment' ) { %>
                                <div class="mt-4">
                                    <button onclick="retryPayment('<%= order._id %>', '<%= order.finalAmount %>')"
                                        class="bg-orange-500 hover:bg-orange-600 text-white font-semibold py-2 px-4 rounded-lg 
                                           flex items-center gap-2 transition duration-300">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20"
                                            fill="currentColor">
                                            <path fill-rule="evenodd"
                                                d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z"
                                                clip-rule="evenodd" />
                                        </svg>
                                        Retry Payment
                                    </button>
                                </div>
                                <% } %>
                        </div>
                    </div>

                    <!-- Delivery Address -->
                    <div
                        class="bg-white rounded-lg shadow-md p-6 mb-6 transform hover:scale-[1.02] transition-transform duration-300">
                        <div class="flex items-center mb-4">
                            <svg class="w-6 h-6 mr-2 text-gray-600" fill="none" stroke="currentColor"
                                viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                            </svg>
                            <h2 class="text-xl font-semibold">Delivery Address</h2>
                        </div>
                        <div class="text-gray-700 ml-8">
                            <% if (order.address) { %>
                                <p class="font-semibold text-lg mb-1">
                                    <%= order.address.name %>
                                </p>
                                <p class="mb-1">
                                    <%= order.address.streetAddress %>
                                </p>
                                <p class="mb-1">
                                    <%= order.address.city %>, <%= order.address.state %>
                                            <!-- <%= order.address.pincode %> -->
                                </p>
                                <p class="text-gray-600">
                                    <%= order.address.country %> - <%= order.address.pincode %>
                                </p>
                                <p class="flex items-center mt-2">
                                    <svg class="w-4 h-4 mr-2 text-gray-500" fill="none" stroke="currentColor"
                                        viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                                    </svg>
                                    <span class="text-gray-700">
                                        <%= order.address.mobile %>
                                    </span>
                                </p>
                                <% if (order.address.typeOfAddress) { %>
                                    <p class="mt-2 text-sm text-gray-500">
                                        (<%= order.address.typeOfAddress %> Address)
                                    </p>
                                <% } %>
                            <% } else { %>
                                <div class="text-gray-500 flex items-center">
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    <p>Address information not available</p>
                                </div>
                            <% } %>
                        </div>
                    </div>
                    <!-- Order Summary -->
                    <div
                        class="bg-white rounded-lg shadow-md p-6 sticky bottom-0 transform hover:scale-[1.01] transition-transform duration-300">
                        <h2 class="text-xl font-semibold mb-4">Order Summary</h2>
                        <% if(order.status==='Delivered' ) { %>
                            <a href="/user/order/invoice/<%= order._id %>"
                                class="inline-flex items-center px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-md text-sm font-medium transition-colors duration-300">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z">
                                    </path>
                                </svg>
                                Download Invoice
                            </a>
                            <% } %>
                                <div class="space-y-2">
                                    <div class="flex justify-between text-gray-600">
                                        <span>Items Total (MRP)</span>
                                        <span>₹<%= order.orderedItems.reduce((total, item)=> total + (item.product.mrp *
                                                item.quantity), 0).toFixed(0) %></span>
                                    </div>
                                    <div class="flex justify-between text-gray-600">
                                        <span>Product Discount</span>
                                        <span class="text-green-600">-₹<%= order.totalDiscount.toFixed(0) %></span>
                                    </div>
                                    <!-- % if(order.coupon && order.coupon.couponCode) { %> -->
                                    <% if(order.couponDiscount && order.couponDiscount> 0) { %>
                                        <div class="flex justify-between text-gray-600">
                                            <!-- <span>Coupon Applied (%= order.coupon.couponCode %>)</span> -->
                                            <span class="text-gray-600">Coupon Discount:</span>
                                            <span class="text-green-600">-₹<%= order.couponDiscount.toFixed(0) %></span>
                                        </div>
                                        <div class="flex justify-between text-sm">
                                            <span class="text-gray-500">Applied Coupon:</span>
                                            <span class="text-gray-500">
                                                <!-- <%= order.coupon ? order.coupon.code : 'N/A' %> -->
                                                <%= order.couponCode || 'N/A' %>
                                                <%= order.coupon && order.coupon.name ? `(${order.coupon.name})` : '' %>
                                            </span>
                                        </div>
                                    <% } %>
                                    <div class="border-t pt-2 mt-2">
                                        <div class="flex justify-between font-semibold text-lg">
                                            <span>Total Amount</span>
                                            <span class="text-brown-600">₹<%= order.finalAmount.toFixed(0) %>
                                                    </span>
                                        </div>
                                    </div>
                                </div>
                    </div>
                </div>
            </div>
    </main>

    <%- include('../../../partials/user/footer') %>

        <style>
            @keyframes fadeIn {
                from {
                    opacity: 0;
                    transform: translateY(10px);
                }

                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            .animate-fade-in {
                animation: fadeIn 0.5s ease-out forwards;
            }
        </style>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
    let currentOrderId = null;
    let currentProductId = null;

    function showReturnModal(orderId, productId, productName) {
        currentOrderId = orderId;
        currentProductId = productId;
        console.log("productName : ",productName)
        document.getElementById('returnItemName').innerHTML  = `Product Name : <span class="font-bold"> ${productName}</span>`;
        document.getElementById('returnModal').classList.remove('hidden');
        document.getElementById('returnModal').classList.add('flex');
        // Reset form
        document.getElementById('returnReason').value = '';
        document.getElementById('otherReason').value = '';
        document.getElementById('otherReasonContainer').classList.add('hidden');
    }

    function closeReturnModal() {
        document.getElementById('returnModal').classList.add('hidden');
        document.getElementById('returnModal').classList.remove('flex');
        document.getElementById('returnReason').value = '';
        document.getElementById('otherReason').value = '';
        document.getElementById('otherReasonContainer').classList.add('hidden');
        currentOrderId = null;
        currentProductId = null;
    }

    function toggleOtherReason() {
        const returnReason = document.getElementById('returnReason').value;
        const otherReasonContainer = document.getElementById('otherReasonContainer');
        
        if (returnReason === 'Other') {
            otherReasonContainer.classList.remove('hidden');
        } else {
            otherReasonContainer.classList.add('hidden');
        }
    }

    async function submitReturn() {
        const returnReasonSelect  = document.getElementById('returnReason');
        const otherReasonText = document.getElementById('otherReason');
        let returnReason = returnReasonSelect.value;
        if (!returnReason) {
            Toastify({
                text: "Please select a reason for return",
                className: "toast_style",
                duration: 3000,
                gravity: "top",
                position: "right",
                style: {
                    background: "#ff6b6b",
                    // background: type === 'success' ? "#4CAF50" : "#ff4444",
                    position: "fixed",
                    top: "20px",
                    right: "20px",
                    zIndex: "9999",
                    padding: "12px 24px",
                    minWidth: "200px",
                    borderRadius: "8px",
                    fontSize: "18px",
                    fontWeight: "500"
                }
            }).showToast();
            return;
        }

        if (returnReason === 'Other') {
            if (!otherReasonText.value.trim()) {
                Toastify({
                    text: "Please specify your return reason",
                    className: "toast_style",
                    duration: 3000,
                    gravity: "top",
                    position: "right",
                    style: {
                        background: "#ff6b6b",
                        // background: type === 'success' ? "#4CAF50" : "#ff4444",
                        position: "fixed",
                        top: "20px",
                        right: "20px",
                        zIndex: "9999",
                        padding: "12px 24px",
                        minWidth: "200px",
                        borderRadius: "8px",
                        fontSize: "18px",
                        fontWeight: "500"
                        }
                }).showToast();
                return;
            }
            returnReason = otherReasonText.value.trim();
        }

        try {
            console.log('currentOrderId :',currentOrderId)
            const response = await axios.post(`/user/order/return/${currentOrderId}/${currentProductId}`, {
                returnReason,
                productId: currentProductId
            });
            console.log("response : ",response)

            if (response.status === 200) {
                Toastify({
                    text: "Return request submitted successfully",
                    className: "toast_style",
                    duration: 3000,
                    gravity: "top",
                    position: "right",
                    style: {
                        background: "linear-gradient(to right, #00b09b, #96c93d)",
                        position: "fixed",
                        top: "20px",
                        right: "20px",
                        zIndex: "9999",
                        padding: "12px 24px",
                        minWidth: "200px",
                        borderRadius: "8px",
                        fontSize: "18px",
                        fontWeight: "500"
                        }
                }).showToast();

                closeReturnModal();
                setTimeout(() => {
                    window.location.reload();
                }, 1000);
            }
        } catch (error) {
            Toastify({
                text: error.response?.data?.message || "Failed to submit return request",
                className: "toast_style",
                duration: 3000,
                gravity: "top",
                position: "right",
                style: {
                    background: "#ff6b6b",
                    position: "fixed",
                    top: "20px",
                    right: "20px",
                    zIndex: "9999",
                    padding: "12px 24px",
                    minWidth: "200px",
                    borderRadius: "8px",
                    fontSize: "18px",
                    fontWeight: "500"
                }
            }).showToast();
        }
    }

    // Close modal when clicking outside
    document.getElementById('returnModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeReturnModal();
        }
    });

    async function retryPayment(orderId, amount) {
        try {
            console.log("hi retry payment")
            const response = await axios.post('/user/retry-payment', {
                orderId:orderId
            });
            console.log("response : ",response.data)
            // const data = await response.json();

        if (!response.data.success) {
            if (response.data.insufficientStockItems) {
                let message = 'Cannot process payment due to insufficient stock:\n';
                response.data.insufficientStockItems.forEach(item => {
                    console.log("Insufficient stock item : ",item)
                    message += `\n${item.productName}:\nRequested: ${item.requestedQuantity}\nAvailable: ${item.availableStock}`;
                });

                await Swal.fire({
                    title: 'Out of Stock',
                    text: response.data.message,
                    icon: 'error',
                    confirmButtonColor: '#d33'
                });
                return;
            }
            throw new Error(response.data.message || 'Payment initiation failed');
        }
            if (response.status === 200) {
                const options = {
                    key: response.data.key_id,
                    amount: amount * 100,
                    currency: "INR",
                    name: "CAlliope",
                    description: "Order Payment",
                    order_id: response.data.id,
                    handler: async function (response) {
                        try {
                            //verify payment
                            console.log("Razorpay payment success, verifying...");
                            const verifyResponse = await axios.post('/user/verify-retry-payment', {
                                ...response,
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature,
                                orderId: orderId, 
                                status: 'Success'
                            });

                            console.log("verifyResponse : ",verifyResponse.data)
                            if (verifyResponse.data.success) {
                                Swal.fire({
                                    title: 'Payment Successful!',
                                    text: 'Thank you for your payment.',
                                    icon: 'success',
                                    confirmButtonText: 'OK',
                                    confirmButtonColor: '#f97316'
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: 'Payment Failed',
                                    text: 'Please try again.',
                                    icon: 'error',
                                    confirmButtonColor: '#f97316'
                                });
                            }
                        } catch (error) {
                            console.error('Payment verification error:', error);
                            Swal.fire({
                                title: 'Error',
                                text: 'Payment verification failed.',
                                icon: 'error',
                                confirmButtonColor: '#f97316'
                            });
                        }
                    },
                    modal: {
                        ondismiss: function () {
                            console.log("Payment modal dismissed");
                            handlePaymentFailure(orderId)
                        }
                        // function () {
                        //     Swal.fire({
                        //         title: 'Payment Cancelled',
                        //         text: 'You cancelled the payment process.',
                        //         icon: 'info',
                        //         confirmButtonColor: '#f97316'
                        //     });
                        // }
                    },
                    theme: {
                        color: "#fb923c"
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();
            }
        } catch (error) {
            console.error('Error initiating payment:', error);
            Swal.fire({
                title: 'Error',
                text: 'Failed to initiate payment. Please try again.',
                icon: 'error',
                confirmButtonColor: '#f97316'
            });
        }
    }

    async function handlePaymentFailure(orderId) {
            console.log("Handling payment failure");
            try {
                // Create order with failed status
                const orderResponse = await axios.post('/user/verify-retry-payment', {
                    orderId: orderId,
                    paymentStatus: 'Failed'
                });
                console.log("orderResponse : ", orderResponse)
                if (!orderResponse.data.success) {
                    const orderId = orderResponse.data.order._id;
                    await Swal.fire({
                        title: 'Payment Failed!',
                        text: orderResponse.data.message || 'Payment Failed. Please try again.',
                        icon: 'error',
                        showCancelButton: true,
                        confirmButtonText: 'Retry Payment',
                        cancelButtonText: 'Cancel',
                        confirmButtonColor: '#f97316',
                        cancelButtonColor: '#6b7280'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = `/user/order/details/${orderId}`;
                        }
                    })
                    // .then(()=>window.location.href = `/user/order/details/${orderId}`)

                } else {
                    showToast('Error creating order', true);
                }
            } catch (error) {
                console.error('Error handling payment failure:', error);
                showToast('Error processing payment failure', true);
            }
        }
</script>


