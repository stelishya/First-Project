<!-- Header -->
<%- include ('../../partials/user/header' , { search: search })%>

<div class="bg-gray-50" style="background-color: rgb(216, 210, 205);" >
    <main class="container mx-auto px-4 py-8">
        <!-- Breadcrumb -->
        <nav class="bg-white rounded-lg shadow-sm p-4 mb-8">
            <ol class="flex items-center space-x-2">
                <li><a href="/user/home" class="hover:text-green-600">Home</a></li>
                <li><span class="mx-2">/</span></li>
                <li><a href="/user/products" class="hover:text-green-600">Products</a></li>
                <li><span class="mx-2">/</span></li>
                <li><a href="/categories/<%= product.category?.name %>" class="hover:text-green-600"><%= product.category?.name %></a></li>
            </ol>
        </nav>

        <div class="grid grid-cols-12 gap-8">
            <!-- Thumbnails Column -->
            <div class="col-span-1">
                <div class="flex flex-col space-y-3">
                    <% product.productImage.forEach((image, index) => { %>
                        <img alt="<%= product.name %> thumbnail <%= index + 1 %>" 
                             class="thumbnail w-16 h-16 rounded-lg cursor-pointer hover:opacity-75 transition-opacity object-cover" 
                             src="/uploads/product-images/<%= image %>"
                             onclick="updateMainImage(this,'<%= image %>')"/>
                    <% }) %>
                </div>
            </div>

            <!-- Main Image -->
            <div class="col-span-5 relative">
                <div class="wishlist-icon absolute top-4 right-4 z-10" data-product="<%= product._id %>" onclick="toggleWishlist(event, '<%= product._id %>')">
                    <i class="fas fa-heart text-2xl"></i>
                </div>
                <div class="zoom-container rounded-lg overflow-hidden bg-white" onmousemove="zoomIn(event)" onmouseleave="resetZoom()">
                    <img id="zoomable-image" 
                         alt="<%= product.name %>"
                         class="w-full h-full object-cover"
                         src="<%= product.productImage && product.productImage.length ? '/uploads/product-images/' + product.productImage[0] : '/images/no_productImage.png' %>"/>
                </div>
            </div>

            <!-- Product Details -->
            <div class="col-span-6" style="border-color: rgb(201, 194, 194);border-width: 2px;border-radius: 5px; padding:30px;">
                <div class="flex justify-between items-start">
                    <h1 class="text-3xl font-bold text-gray-900"><%= product.productName %></h1>
                    <!-- <div class="flex items-center gap-4">
                        <div class="wishlist-icon" data-product="<%= product._id %>" onclick="toggleWishlist(event, '<%= product._id %>')">
                            <i class="fas fa-heart text-2xl"></i>
                        </div> 
                    </div> -->
                        <div class="flex items-center bg-green-500 text-white px-3 py-1.5 rounded-full">
                            <span class="mr-1"><%= product.rating %></span>
                            <i class="fas fa-star"></i>
                        </div>
                </div>

                <!-- Price Section -->
                <div class="mt-6">
                    <div class="flex items-baseline space-x-3">
                        <span class="text-4xl font-bold text-green-600">₹<%= product.discountedPrice %></span>
                            <span class="text-xl text-green-500">₹<%= product.mrp %></span>
                            <span class="text-lg text-red-500">(<%= product.productOffer %>% off)</span>
                    </div>
                </div>


                <!-- Description -->
                <div class="mt-6">
                    <h2 class="text-lg font-semibold text-gray-900 mb-2">Description</h2>
                    <p class="text-gray-700 leading-relaxed">
                        <%= product.description %>
                    </p>
                </div>

                <!-- Quantity and Actions -->
                <div class="mt-8 space-y-4">
                    <!-- Quantity Selector -->
                    <div class="flex items-center space-x-4">
                        <span class="text-gray-700 font-medium">Quantity:</span>
                        <div class="flex items-center bg-white border border-gray-300 rounded-lg overflow-hidden">
                            <button onclick="updateQuantity(-1)" 
                                    class="px-4 py-2 hover:bg-gray-100 transition-colors duration-200 focus:outline-none">
                                <i class="fas fa-minus text-gray-600"></i>
                            </button>
                            <input type="number" id="quantity" value="1" min="1" 
                                   max="<%= product.quantity < 6 ? product.quantity : 5 %>"
                                   class="w-16 text-center border-x border-gray-300 py-2 focus:outline-none"
                                   onchange="validateQuantity(this)">
                            <button onclick="updateQuantity(1)"
                                    class="px-4 py-2 hover:bg-gray-100 transition-colors duration-200 focus:outline-none">
                                <i class="fas fa-plus text-gray-600"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="flex space-x-4">
                        <button onclick="addToCart('<%= product._id %>')"
                                class="flex-1 bg-orange-500 hover:bg-orange-600 text-white px-6 py-3 rounded-lg transition-colors duration-200 flex items-center justify-center"
                                <%= product.quantity <= 0 ? 'disabled' : '' %>>
                            <i class="fas fa-shopping-cart mr-2"></i>Add to Cart
                        </button>
                        <button onclick="buyNow('<%= product._id %>')"
                                class="flex-1 bg-green-500 hover:bg-green-600 text-white px-6 py-3 rounded-lg transition-colors duration-200 flex items-center justify-center"
                                <%= product.quantity <= 0 ? 'disabled' : '' %>>
                            <i class="fas fa-bolt mr-2"></i>Buy Now
                        </button>
                    </div>
                </div>

                <!-- Delivery Info -->
                <div class="mt-8 bg-gray-50 rounded-lg p-6">
                    <h2 class="text-lg font-semibold text-gray-900 mb-4">Delivery & Returns</h2>
                    <ul class="space-y-3 text-gray-700">
                        <li class="flex items-center">
                            <i class="fas fa-truck text-green-600 mr-3"></i>
                            Order today to get it by <b class="text-green-600 ml-1">26 Dec 2024</b>
                        </li>
                        <li class="flex items-center">
                            <i class="fas fa-coins text-green-600 mr-3"></i>
                            Free delivery on orders above ₹499
                        </li>
                        <li class="flex items-center">
                            <i class="fas fa-undo text-green-600 mr-3"></i>
                            7 days easy return policy
                        </li>
                        <li class="flex items-center">
                            <i class="fas fa-money-bill-wave text-green-600 mr-3"></i>
                            Cash on delivery available
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Related Products -->
        <% if (relatedProducts && relatedProducts.length > 0) { %>
        <section class="mt-16">
            <h2 class="text-2xl font-bold text-gray-900 mb-8">You May Also Like</h2>
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                <% relatedProducts.forEach(product => { %>
                    <a href="/user/product/details/<%= product._id %>" 
                       class="group bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-lg transition-shadow duration-300">
                        <div class="aspect-w-1 aspect-h-1 h-48">
                            <img src="/uploads/product-images/<%= product.productImage[0] %>" 
                                 alt="<%= product.productName %>"
                                 class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300">
                        </div>
                        <div class="p-4">
                            <h3 class="text-lg font-semibold text-gray-800 truncate group-hover:text-green-600 transition-colors duration-200">
                                <%= product.productName %>
                            </h3>
                            <div class="mt-2 flex items-baseline space-x-2">
                                <span class="text-xl font-bold text-green-600">₹<%= product.discountedPrice %></span>
                                <% if (product.productOffer > 0) { %>
                                    <span class="text-sm text-gray-500 line-through">₹<%= product.mrp %></span>
                                    <span class="text-sm text-red-500">(<%= product.productOffer %>% off)</span>
                                <% } %>
                            </div>
                        </div>
                    </a>
                <% }) %>
            </div>
        </section>
        <% } %>
    </main>
</div>

<%- include('../../partials/user/footer')%>

<style>
    .zoom-container {
        position: relative;
        overflow: hidden;
        width: 100%;
        height: 500px;
    }

    #zoomable-image {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }
    .wishlist-icon {
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .wishlist-icon i {
        color: #ccc;
    }

    .wishlist-icon.active i {
        color: #ff4444;
    }

    .wishlist-icon:hover i {
        transform: scale(1.1);
    }
</style>

<script>
function updateMainImage(selectedThumbnail, imageSrc) {
    document.getElementById('zoomable-image').src = '/uploads/product-images/' + imageSrc;
    
    // Update thumbnail styles
    document.querySelectorAll('.thumbnail').forEach(thumbnail => {
        thumbnail.classList.remove('ring-2', 'ring-orange-500');
    });
    selectedThumbnail.classList.add('ring-2', 'ring-orange-500');
}

function zoomIn(event) {
    const container = event.currentTarget;
    const image = container.querySelector('#zoomable-image');
    const { left, top, width, height } = container.getBoundingClientRect();
    
    const x = (event.clientX - left) / width;
    const y = (event.clientY - top) / height;
    
    image.style.transformOrigin = `${x * 100}% ${y * 100}%`;
    image.style.transform = 'scale(2)';
}

function resetZoom() {
    const image = document.getElementById('zoomable-image');
    image.style.transform = 'scale(1)';
}

function updateQuantity(change) {
    const input = document.getElementById('quantity');
    const currentValue = parseInt(input.value);
    const maxValue = parseInt(input.getAttribute('max'));
    const newValue = currentValue + change;
    
    if (newValue >= 1 && newValue <= maxValue) {
        input.value = newValue;
    }
}

function validateQuantity(input) {
    const value = parseInt(input.value);
    const max = parseInt(input.getAttribute('max'));
    
    if (value < 1) input.value = 1;
    if (value > max) input.value = max;
}

function addToCart(productId) {
    const quantity = document.getElementById('quantity').value;
    
    fetch('/user/addToCart', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify({
            productId,
            quantity: parseInt(quantity)
        })
    })
    .then(response => {
        if (!response.ok) {
            if (response.status === 401) {
                window.location.href = '/login';
                throw new Error('Please login to add items to cart');
            }
            return response.json().then(data => {
                throw new Error(data.message || 'Error adding to cart');
            });
        }
        return response.json();
    })
    .then(data => {
        Toastify({
            text: data.message || "Product added to cart successfully!",
            duration: 3000,
            gravity: "top",
            position: "right",
            style: {
                background: "#4CAF50"
            }
        }).showToast();
    })
    .catch(error => {
        if (error.message !== 'Please login to add items to cart') {
            Toastify({
                text: error.message,
                duration: 3000,
                gravity: "top",
                position: "right",
                style: {
                    background: "#ff0000"
                }
            }).showToast();
        }
    });
}

function buyNow(productId) {
    console.log("productId : ", productId)
    const quantity = document.getElementById('quantity').value;
    console.log("quantity : ", quantity)
    
    try {
            // Redirect to checkout with product and quantity information
            window.location.href = `/user/checkout?productId=${productId}&quantity=${quantity}&buyNow=true`;
        } catch (error) {
            console.error('Error processing buy now:', error);
            showToast("Failed to process buy now request", true);
        }
    // fetch(`/user/checkout?productId=${productId}&quantity=${parseInt(quantity)}`, {
    //     method: 'GET',
    //     headers: {
    //         'Accept': 'application/json',
    //         'X-Requested-With': 'XMLHttpRequest'
    //     }
    // })
    // .then(response => {
    //     if (!response.ok) {
    //         return response.json().then(data => {
    //             throw new Error(data.message || 'Something went wrong');
    //         });
    //     }
    //     return response.json();
    // })
    // .catch(error => {
    //     console.error('Error:', error);
    //     if (error.message.includes('login')) {
    //         window.location.href = '/user/login';
    //     } else {
    //         Toastify({
    //             text: error.message || "Server Error",
    //             duration: 3000,
    //             gravity: "top",
    //             position: "right",
    //             style: {
    //                 background: "#ff0000"
    //             }
    //         }).showToast();
    //     }
    // });
}
         // Wishlist functions
    async function toggleWishlist(event, productId) {
        event.preventDefault();
        event.stopPropagation();
        
        try {
            const response = await fetch('/user/wishlist/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            });
            
            const data = await response.json();
            
            if (data.success) {
                const wishlistIcon = document.querySelector(`.wishlist-icon[data-product="${productId}"]`);
                if (data.inWishlist) {
                    wishlistIcon.classList.add('active');
                    showToast('Added to wishlist!', 'success');
                } else {
                    wishlistIcon.classList.remove('active');
                    showToast('Removed from wishlist!', 'info');
                }
            }
        } catch (error) {
            console.error('Error toggling wishlist:', error);
            showToast('Error updating wishlist', 'error');
        }
    }

    // Check initial wishlist status
    async function checkWishlistStatus(productId) {
        try {
            const response = await fetch(`/user/wishlist/check/${productId}`);
            const data = await response.json();
            
            if (data.success && data.inWishlist) {
                const wishlistIcon = document.querySelector(`.wishlist-icon[data-product="${productId}"]`);
                wishlistIcon.classList.add('active');
            }
        } catch (error) {
            console.error('Error checking wishlist status:', error);
        }
    }

    // Initialize wishlist status
    document.addEventListener('DOMContentLoaded', function() {
        const productId = document.querySelector('.wishlist-icon').dataset.product;
        checkWishlistStatus(productId);
    });
    function showToast(message, type) {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                className: "toastify-custom",
                style: {
                    background: type === 'success' ? "#4CAF50" : "#ff4444",
                    position: "fixed",
                    top: "20px",
                    right: "20px",
                    zIndex: "9999",
                    padding: "12px 24px",
                    minWidth: "200px",
                    borderRadius: "8px",
                    fontSize: "14px",
                    fontWeight: "500"
                }
            }).showToast();
        }
</script>

<!-- Add Toastify CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<!-- Add Toastify JS -->
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>