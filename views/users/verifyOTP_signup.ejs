<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <style>
    body {
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        background-color: #fbf8f8;
    }
    .header{
        text-align: center;
        width: 100%;
        color: black;
        background-color: #d3c7c7;
        font-size: 30px;
        position: absolute;
        top: 0;
        left: 0;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    .container {
        background-color: #d3c7c7;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
        text-align: center;
        margin-top: 100px;
    }
    h1 {
        margin-bottom: 1rem;
        color: #645858;
    }
    .otp-input {
        display: flex;
        justify-content: center;
        margin-bottom: 1.5rem;
    }
    .otp-input input {
        width: 40px;
        height: 40px;
        margin: 0 5px;
        text-align: center;
        font-size: 1.2rem;
        border: 1px solid #444;
        border-radius: 4px;
        background-color: #2a2a2a;
        color: #ffffff;
    }
    .buttons{
        display:flex;
        justify-content:center;
        gap:10px;
        margin-top: 10px;
    }
    button {
        background-color: #484f48;
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 1rem;
        border-radius: 4px;
        cursor: pointer;
    }
    button:hover {
        background-color: #506051;
    }
    button:disabled {
        background-color: #cccccc;
        color: #666666;
        cursor: not-allowed;
    }
    #timer {
        font-size: 1.2rem;
        margin-bottom: 1rem;
        color: #463c2e;
    }
    </style>
</head>
<body>
    <div class="header">
        <h1>CAlliope</h1>
    </div>
    <div class="container">
        <h1>OTP Verification</h1>
        <p>Enter the 6-digit code sent to your email: <strong><%= email %></strong></p>
        <div id="timer">Time remaining: 0:30</div>
        <form action="/user/verifyOTP" method="post" >
        <!-- onsubmit="return validateOTPForm()"> -->
            <div class="otp-input">
                <input type="number" min="0" max="9" class="otp-digit" aria-label="OTP digit 1" name="otp[]" required maxlength="1" oninput="handleInput(this, event)">
                <input type="number" min="0" max="9" class="otp-digit" aria-label="OTP digit 1" name="otp[]" required maxlength="1" oninput="handleInput(this, event)">
                <input type="number" min="0" max="9" class="otp-digit" aria-label="OTP digit 1" name="otp[]" required maxlength="1" oninput="handleInput(this, event)">
                <input type="number" min="0" max="9" class="otp-digit" aria-label="OTP digit 1" name="otp[]" required maxlength="1" oninput="handleInput(this, event)">
                <input type="number" min="0" max="9" class="otp-digit" aria-label="OTP digit 1" name="otp[]" required maxlength="1" oninput="handleInput(this, event)">
                <input type="number" min="0" max="9" class="otp-digit" aria-label="OTP digit 1" name="otp[]" required maxlength="1" oninput="handleInput(this, event)">
            </div>
            <div class="buttons">
                <button type='submit' onclick="verifyOTP()">Verify</button>
            </div>
    </form>
    <form action="/user/resendOTP" method="post">
        <div class="buttons">
            <button id="resendButton" type="submit" disabled onClick="resendOTP()">Resend Code</button>
        </div>
    </form>
    </div>

<script>

function handleInput(input, event) {
    // Ensure only one digit
    if (input.value.length > 1) {
        input.value = input.value.slice(0, 1);
    }

    // Move to next input if available
    if (input.value.length === 1) {
        const nextInput = input.nextElementSibling;
        if (nextInput && nextInput.classList.contains('otp-digit')) {
            nextInput.focus();
        }
    }

    // Handle backspace
    if (event.inputType === 'deleteContentBackward') {
        const prevInput = input.previousElementSibling;
        if (prevInput && prevInput.classList.contains('otp-digit')) {
            prevInput.focus();
        }
    }
}

// function getOTPValue() {
//     const inputs = document.querySelectorAll('.otp-digit');
//     return Array.from(inputs).map(input => input.value).join('');
// }

        const inputs = document.querySelectorAll('.otp-digit');
        const timerDisplay = document.getElementById('timer');
        const resendButton = document.getElementById('resendButton');
        let timeLeft = 30;//30 sec demo
        // let timeLeft = 180; // 3 minutes in seconds
        let timerId;

        function startTimer() {
            timerId = setInterval(() => {
                if (timeLeft <= 0) {
                    clearInterval(timerId);
                    timerDisplay.textContent = "Code expired";
                    resendButton.disabled = false;
                    inputs.forEach(input => input.disabled = true);
                } else {
                    const minutes = Math.floor(timeLeft / 60);
                    const seconds = timeLeft % 60;
                    timerDisplay.textContent = `Time remaining: ${minutes}:${seconds.toString().padStart(2, '0')}`;
                    timeLeft--;
                }
            }, 1000);
        }

        function resendOTP() {
              // Here you would typically call your backend to resend the OTP
              alert("New OTP sent!");
              let timeLeft = 30;//30 sec demo
            //   timeLeft = 180;
              inputs.forEach(input => {
                  input.value = '';
                  input.disabled = false;
              });
              resendButton.disabled = true;
              inputs[0].focus();
              clearInterval(timerId);
              startTimer();
          }

          inputs.forEach((input, index) => {
              input.addEventListener('input', (e) => {
                  if (e.target.value.length > 1) {
                      e.target.value = e.target.value.slice(0, 1);
                  }
                  if (e.target.value.length === 1) {
                      if (index < inputs.length - 1) {
                          inputs[index + 1].focus();
                      }
                  }
              });

              input.addEventListener('keydown', (e) => {
                  if (e.key === 'Backspace' && !e.target.value) {
                      if (index > 0) {
                          inputs[index - 1].focus();
                      }
                  }
                  if (e.key === 'e') {
                      e.preventDefault();
                  }
              });
          });

async function verifyOTP() {
    // Get all OTP input fields
    const otpInputs = document.querySelectorAll('.otp-digit');
    const otpArray = [];

    // Validate and collect OTP values
    let isValid = true;
    let isEmpty = false;

    otpInputs.forEach(input => {
        if (!input.value) {
            isEmpty = true;
        }
        else if (input.value.length !== 1 || isNaN(input.value) || input.value < 0 || input.value > 9) {
            isValid = false;
        }
        else{
            otpArray.push(input.value);
        }
    });

    // Validation checks
    if (isEmpty || !isValid) {
    otpArray.length = 0; // Clear array
    Swal.fire({
        icon: isEmpty ? 'error' : 'error',
        title: isEmpty ? 'Incomplete OTP' : 'Invalid OTP',
        text: isEmpty 
            ? 'Please enter all 6 digits of the OTP' 
            : 'Each OTP digit must be a number between 0 and 9',
    });
    return;
}

    // if (isEmpty) {
    //     Swal.fire({
    //         icon: 'error',
    //         title: 'Incomplete OTP',
    //         text: 'Please enter all 6 digits of the OTP'
    //     });
    //     return;
    // }

    // if (!isValid) {
    //     Swal.fire({
    //         icon: 'error',
    //         title: 'Invalid OTP',
    //         text: 'Each OTP digit must be a number between 0 and 9'
    //     });
    //     return;
    // }
    if (otpArray.length !== otpInputs.length) {
    Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'OTP submission failed. Please try again.',
    });
    return;
}

    try{
       const response = await axios.post('/user/verifyOTP', { otp: otpArray.join('') });
        if (response.data.success) { 
            Swal.fire({
                icon: "success",
                title: "OTP Verified Successfully",
                showConfirmButton: false,
                timer: 1500,
            }).then(() => {
                window.location.href = response.data.redirectUrl || '/user/login';
            });
        } else if (response.data.message === "OTP Expired") {
            Swal.fire({
                icon: "error",
                title: "OTP Expired",
                text: "Your OTP has expired. Please request a new one.",
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: response.data.message,
            });
        }
    }catch(error){
        console.error('Error in verifying OTP: ',error);
        Swal.fire({
            icon: "error",
            title: "Error",
            text: error.response?.data?.message || "Failed to verify OTP",
        });
    }
}
    // function validateOTPForm(){
    //    const otpInput = document.querySelectorAll("otp-digit");
    //    let otpValue = '';
    //     otpInputs.forEach(input => {
    //         otpValue += input.value;
    //     });

    //     if (otpValue.length !== 6) {
    //     Swal.fire({
    //         icon: 'error',
    //         title: 'Incomplete OTP',
    //         text: 'Please enter all 6 digits of the OTP',
    //     });
    //     return false;
    //     }
    // // Send OTP to server
    // axios.post('/user/verifyOTP', { otp: otpInput })
    //     .then(response => {
    //         if (response.data.success) {
    //             Swal.fire({
    //                 icon: "success",
    //                 title: "OTP Verified Successfully",
    //                 showConfirmButton: false,
    //                 timer: 1500,
    //             }).then(() => {
    //                 window.location.href = response.data.redirectUrl;
    //             });
    //         } else if (response.data.message === "OTP Expired") {
    //             Swal.fire({
    //                 icon: "error",
    //                 title: "OTP Expired",
    //                 text: "Your OTP has expired. Please request a new one.",
    //             });
    //         } else {
    //             Swal.fire({
    //                 icon: "error",
    //                 title: "Error",
    //                 text: response.data.message,
    //             });
    //         }
    //     })
    //     .catch(error => {
    //         console.error('Error:', error);
    //         Swal.fire({
    //             icon: "error",
    //             title: "Error",
    //             text: error.response?.data?.message || "Failed to verify OTP",
    //         });
    //     });
    // }


        //   function verifyOTP() {
        //     const inputs = document.querySelectorAll('.otp-digit');
        //     let isValid = true;
        //     let isEmpty = false;

        //     inputs.forEach(input => {
        //         if (!input.value) {
        //             isEmpty = true;
        //         }
        //         if (input.value.length !== 1 || isNaN(input.value) || input.value < 0 || input.value > 9) {
        //             isValid = false;
        //         }
        //     });
        
        //     if (isEmpty) {
        //         Swal.fire({
        //             icon: 'error',
        //             title: 'Incomplete OTP',
        //             text: 'Please enter all 6 digits of the OTP'
        //         });
        //         return false;
        //     }
        
        //     if (!isValid) {
        //         Swal.fire({
        //             icon: 'error',
        //             title: 'Invalid OTP',
        //             text: 'Each OTP digit must be a number between 0 and 9'
        //         });
        //         return false;
        //     }
        
        //     return true;
        // }

        //   startTimer();
        
        // function validateOTPForm(){
        //     const otpInput = document.getElementById("otp").value;

        //     axios.post('/user/verifyOTP',{otp:otpInput})
        //         .then(response =>{
        //             if(response.data.success){
        //                 Swal.fire({
        //                     icon: "success",
        //                     title: "OTP Verified Successfully",
        //                     showConfirmButton: false,
        //                     timer: 1500,
        //                 }).then(() => {
        //                     window.location.href = response.data.redirectUrl;
        //                 });
        //             }else if(response.data.message === "OTP Expired"){
        //                 Swal.fire({
        //                     icon: "error",
        //                     title: "OTP Expired",
        //                     text: "Your OTP has expired. Please request a new one.",
        //                 });
        //             }else{
        //                 Swal.fire({
        //                     icon: "error",
        //                     title: "Error",
        //                     text: response.data.message,
        //                 });
        //             }
        //         })
        //         .catch(()=>{
        //             Swal.fire({
        //                 icon: "error",
        //                 title: "Invalid OTP",
        //                 text: "Please try again",
        //             });
        //         });
        //     return false;
        // }
        
    </script>
    <!-- <script src="User/JS/functions.js"></script> -->
</body>
</html>